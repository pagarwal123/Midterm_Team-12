<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='full' inline='true' name='federated.1fgc14w0zhmqhj1614co81v3iwfs' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='full' name='textscan.1x64gto0tz2dpv1h8lng711vqfff'>
            <connection class='textscan' directory='C:/Users/LI Zhi/Desktop/ADS_Midterm_Project' filename='full.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1x64gto0tz2dpv1h8lng711vqfff' name='full.csv' table='[full#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='BuildingID' ordinal='1' />
            <column datatype='string' name='vac' ordinal='2' />
            <column datatype='integer' name='meternumb' ordinal='3' />
            <column datatype='string' name='type' ordinal='4' />
            <column datatype='integer' name='hour' ordinal='5' />
            <column datatype='integer' name='Consumption' ordinal='6' />
            <column datatype='date' name='Date' ordinal='7' />
            <column datatype='integer' name='DayOfWeek' ordinal='8' />
            <column datatype='integer' name='MonthOfYear' ordinal='9' />
            <column datatype='integer' name='Weekday/Weekend' ordinal='10' />
            <column datatype='integer' name='Base_Hour_Flag' ordinal='11' />
            <column datatype='integer' name='Day' ordinal='12' />
            <column datatype='integer' name='Holiday' ordinal='13' />
            <column datatype='string' name='address' ordinal='14' />
            <column datatype='integer' name='area_floor._m.sqr' ordinal='15' />
            <column datatype='string' name='station_id' ordinal='16' />
            <column datatype='datetime' name='Time' ordinal='17' />
            <column datatype='real' name='TemperatureF' ordinal='18' />
            <column datatype='real' name='Dew_PointF' ordinal='19' />
            <column datatype='integer' name='Humidity' ordinal='20' />
            <column datatype='real' name='Sea_Level_PressureIn' ordinal='21' />
            <column datatype='real' name='VisibilityMPH' ordinal='22' />
            <column datatype='string' name='Wind_Direction' ordinal='23' />
            <column datatype='real' name='Wind_SpeedMPH' ordinal='24' />
            <column datatype='string' name='Events' ordinal='25' />
            <column datatype='string' name='Conditions' ordinal='26' />
            <column datatype='integer' name='WindDirDegrees' ordinal='27' />
            <column datatype='datetime' name='DateUTC' ordinal='28' />
            <column datatype='real' name='kwh/square' ordinal='29' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BuildingID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BuildingID]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>BuildingID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vac</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vac]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>vac</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>meternumb</remote-name>
            <remote-type>20</remote-type>
            <local-name>[meternumb]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>meternumb</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Consumption]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Consumption</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayOfWeek</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DayOfWeek]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>DayOfWeek</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MonthOfYear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MonthOfYear]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>MonthOfYear</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekday/Weekend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weekday/Weekend]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Weekday/Weekend</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base_Hour_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base_Hour_Flag]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Base_Hour_Flag</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Holiday]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Holiday</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_floor._m.sqr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[area_floor._m.sqr]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>area_floor._m.sqr</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station_id]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>station_id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>17</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TemperatureF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TemperatureF]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>TemperatureF</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dew_PointF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dew_PointF]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Dew_PointF</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Humidity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Humidity]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Humidity</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sea_Level_PressureIn</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sea_Level_PressureIn]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Sea_Level_PressureIn</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VisibilityMPH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VisibilityMPH]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>VisibilityMPH</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind_Direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Wind_Direction]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Wind_Direction</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind_SpeedMPH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind_SpeedMPH]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Wind_SpeedMPH</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Events</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Events]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Events</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conditions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Conditions]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Conditions</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WindDirDegrees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WindDirDegrees]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>WindDirDegrees</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DateUTC</remote-name>
            <remote-type>135</remote-type>
            <local-name>[DateUTC]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>DateUTC</remote-alias>
            <ordinal>28</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kwh/square</remote-name>
            <remote-type>5</remote-type>
            <local-name>[kwh/square]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>kwh/square</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[full.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' caption='Base Hour Flag' datatype='integer' name='[Base_Hour_Flag]' role='dimension' type='ordinal' />
      <column caption='Building ID' datatype='integer' name='[BuildingID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
      <column caption='Date UTC' datatype='datetime' name='[DateUTC]' role='dimension' type='ordinal' />
      <column caption='Day Of Week' datatype='integer' name='[DayOfWeek]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Day]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Dew PointF' datatype='real' name='[Dew_PointF]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Holiday]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Humidity]' role='dimension' type='ordinal' />
      <column caption='Month Of Year' datatype='integer' name='[MonthOfYear]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Sea Level PressureIn' datatype='real' name='[Sea_Level_PressureIn]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Temperature F' datatype='real' name='[TemperatureF]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Visibility MPH' datatype='real' name='[VisibilityMPH]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Weekday/Weekend]' role='dimension' type='ordinal' />
      <column caption='Wind Dir Degrees' datatype='integer' name='[WindDirDegrees]' role='measure' type='quantitative' />
      <column caption='Wind Direction' datatype='string' name='[Wind_Direction]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Wind SpeedMPH' datatype='real' name='[Wind_SpeedMPH]' role='dimension' type='ordinal' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='Area Floor. M.Sqr' datatype='integer' name='[area_floor._m.sqr]' role='measure' type='quantitative' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Kwh/Square' datatype='real' name='[kwh/square]' role='measure' type='quantitative' />
      <column caption='Meternumb' datatype='integer' name='[meternumb]' role='measure' type='quantitative' />
      <column caption='Station Id' datatype='string' name='[station_id]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
      <column-instance column='[Dew_PointF]' derivation='None' name='[none:Dew_PointF:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Humidity]' derivation='None' name='[none:Humidity:ok]' pivot='key' type='ordinal' />
      <column-instance column='[TemperatureF]' derivation='None' name='[none:TemperatureF:ok]' pivot='key' type='ordinal' />
      <column-instance column='[VisibilityMPH]' derivation='None' name='[none:VisibilityMPH:ok]' pivot='key' type='ordinal' />
      <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
      <column-instance column='[Base_Hour_Flag]' derivation='Sum' name='[sum:Base_Hour_Flag:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Holiday]' derivation='Sum' name='[sum:Holiday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[kwh/square]' derivation='Sum' name='[sum:kwh/square:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Dew PointF,Vac)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Dew_PointF:ok]' />
          <groupfilter function='level-members' level='[none:vac:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Humidity,Vac)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Humidity:ok]' />
          <groupfilter function='level-members' level='[none:vac:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Temperature F,Vac)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:TemperatureF:ok]' />
          <groupfilter function='level-members' level='[none:vac:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[排除(Vac,Visibility MPH)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:vac:nk]' />
          <groupfilter function='level-members' level='[none:VisibilityMPH:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.70403' measure-ordering='alphabetic' measure-percentage='0.29597' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Base_Hour_Flag:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1fgc14w0zhmqhj1614co81v3iwfs]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Holiday:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Base Hour Flag'>
      <table>
        <view>
          <datasources>
            <datasource caption='full' name='federated.1fgc14w0zhmqhj1614co81v3iwfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1fgc14w0zhmqhj1614co81v3iwfs'>
            <column aggregation='Sum' caption='Base Hour Flag' datatype='integer' name='[Base_Hour_Flag]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column caption='Kwh/Square' datatype='real' name='[kwh/square]' role='measure' type='quantitative' />
            <column-instance column='[Base_Hour_Flag]' derivation='None' name='[none:Base_Hour_Flag:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kwh/square]' derivation='Sum' name='[sum:kwh/square:qk]' pivot='key' type='quantitative' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]' value='69' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]' value='80' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='312' />
                <format attr='maxheight' value='312' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk] + [federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk])</rows>
        <cols>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk] / ([federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Base_Hour_Flag:ok] / [federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='Conditions'>
      <table>
        <view>
          <datasources>
            <datasource caption='full' name='federated.1fgc14w0zhmqhj1614co81v3iwfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1fgc14w0zhmqhj1614co81v3iwfs'>
            <column datatype='string' name='[Conditions]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column caption='Kwh/Square' datatype='real' name='[kwh/square]' role='measure' type='quantitative' />
            <column-instance column='[Conditions]' derivation='None' name='[none:Conditions:nk]' pivot='key' type='nominal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kwh/square]' derivation='Sum' name='[sum:kwh/square:qk]' pivot='key' type='quantitative' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk] + [federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk])</rows>
        <cols>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk] / [federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Conditions:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Daily kwh'>
      <table>
        <view>
          <datasources>
            <datasource caption='full' name='federated.1fgc14w0zhmqhj1614co81v3iwfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1fgc14w0zhmqhj1614co81v3iwfs'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column datatype='datetime' name='[Time]' role='dimension' type='ordinal' />
            <column caption='Kwh/Square' datatype='real' name='[kwh/square]' role='measure' type='quantitative' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kwh/square]' derivation='Sum' name='[sum:kwh/square:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Time]' derivation='Day-Trunc' name='[tdy:Time:qk]' pivot='key' type='quantitative' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='131' />
                <format attr='maxwidth' value='131' />
                <format attr='minheight' value='329' />
                <format attr='maxheight' value='329' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk] + [federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk])</rows>
        <cols>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk] * [federated.1fgc14w0zhmqhj1614co81v3iwfs].[tdy:Time:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Dew Point'>
      <table>
        <view>
          <datasources>
            <datasource caption='full' name='federated.1fgc14w0zhmqhj1614co81v3iwfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1fgc14w0zhmqhj1614co81v3iwfs'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Dew PointF' datatype='real' name='[Dew_PointF]' role='dimension' type='ordinal' />
            <column caption='Kwh/Square' datatype='real' name='[kwh/square]' role='measure' type='quantitative' />
            <column-instance column='[Dew_PointF]' derivation='None' name='[none:Dew_PointF:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kwh/square]' derivation='Sum' name='[sum:kwh/square:qk]' pivot='key' type='quantitative' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[Exclusions (Dew PointF,Vac)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Dew_PointF:ok]' />
                <groupfilter function='level-members' level='[none:vac:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Dew_PointF:ok]' member='-9999.0' />
                <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 2&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[Exclusions (Dew PointF,Vac)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk] + [federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk])</rows>
        <cols>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk] / [federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Dew_PointF:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Holiday'>
      <table>
        <view>
          <datasources>
            <datasource caption='full' name='federated.1fgc14w0zhmqhj1614co81v3iwfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1fgc14w0zhmqhj1614co81v3iwfs'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Holiday]' role='dimension' type='ordinal' />
            <column caption='Kwh/Square' datatype='real' name='[kwh/square]' role='measure' type='quantitative' />
            <column-instance column='[Holiday]' derivation='None' name='[none:Holiday:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kwh/square]' derivation='Sum' name='[sum:kwh/square:qk]' pivot='key' type='quantitative' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
          </pane>
          <pane id='1' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
          </pane>
          <pane id='2' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
          </pane>
        </panes>
        <rows>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk] + [federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk])</rows>
        <cols>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk] / [federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Holiday:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Humidity'>
      <table>
        <view>
          <datasources>
            <datasource caption='full' name='federated.1fgc14w0zhmqhj1614co81v3iwfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1fgc14w0zhmqhj1614co81v3iwfs'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Humidity]' role='dimension' type='ordinal' />
            <column caption='Kwh/Square' datatype='real' name='[kwh/square]' role='measure' type='quantitative' />
            <column-instance column='[Humidity]' derivation='None' name='[none:Humidity:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kwh/square]' derivation='Sum' name='[sum:kwh/square:qk]' pivot='key' type='quantitative' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[Exclusions (Humidity,Vac)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Humidity:ok]' />
                <groupfilter function='level-members' level='[none:vac:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Humidity:ok]' member='%null%' />
                <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 2&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[Exclusions (Humidity,Vac)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk] + [federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk])</rows>
        <cols>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk] / [federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Humidity:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='full' name='federated.1fgc14w0zhmqhj1614co81v3iwfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1fgc14w0zhmqhj1614co81v3iwfs'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column caption='Month Of Year' datatype='integer' name='[MonthOfYear]' role='dimension' type='quantitative' />
            <column caption='Kwh/Square' datatype='real' name='[kwh/square]' role='measure' type='quantitative' />
            <column-instance column='[MonthOfYear]' derivation='None' name='[none:MonthOfYear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kwh/square]' derivation='Sum' name='[sum:kwh/square:qk]' pivot='key' type='quantitative' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:MonthOfYear:qk]' field-type='quantitative' max='15' min='0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]' field-type='quantitative' max='219.41041673968311' min='-32.919538482192714' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk]' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='230' />
                <format attr='maxwidth' value='230' />
                <format attr='minheight' value='487' />
                <format attr='maxheight' value='487' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk] + [federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk])</rows>
        <cols>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk] * [federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:MonthOfYear:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sea Level Pressure'>
      <table>
        <view>
          <datasources>
            <datasource caption='full' name='federated.1fgc14w0zhmqhj1614co81v3iwfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1fgc14w0zhmqhj1614co81v3iwfs'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Sea Level PressureIn' datatype='real' name='[Sea_Level_PressureIn]' role='dimension' type='ordinal' />
            <column caption='Kwh/Square' datatype='real' name='[kwh/square]' role='measure' type='quantitative' />
            <column-instance column='[Sea_Level_PressureIn]' derivation='None' name='[none:Sea_Level_PressureIn:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kwh/square]' derivation='Sum' name='[sum:kwh/square:qk]' pivot='key' type='quantitative' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Sea_Level_PressureIn:ok]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Sea_Level_PressureIn:ok]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Sea_Level_PressureIn:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk] + [federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk])</rows>
        <cols>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk] / [federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Sea_Level_PressureIn:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Temperature'>
      <table>
        <view>
          <datasources>
            <datasource caption='full' name='federated.1fgc14w0zhmqhj1614co81v3iwfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1fgc14w0zhmqhj1614co81v3iwfs'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Temperature F' datatype='real' name='[TemperatureF]' role='dimension' type='ordinal' />
            <column caption='Kwh/Square' datatype='real' name='[kwh/square]' role='measure' type='quantitative' />
            <column-instance column='[TemperatureF]' derivation='None' name='[none:TemperatureF:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kwh/square]' derivation='Sum' name='[sum:kwh/square:qk]' pivot='key' type='quantitative' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[Exclusions (Temperature F,Vac)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:TemperatureF:ok]' />
                <groupfilter function='level-members' level='[none:vac:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:TemperatureF:ok]' member='-9999.0' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 10&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 11&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 12&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 14&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 15&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 16&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 17&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 18&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 2&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 20&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 21&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 22&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 23&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 24&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 25&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 26&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 31&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 33&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 4&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 5&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 6&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 7&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 8&quot;' />
                  <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 9&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[Exclusions (Temperature F,Vac)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk] + [federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk])</rows>
        <cols>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk] / [federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:TemperatureF:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Visibility MPH'>
      <table>
        <view>
          <datasources>
            <datasource caption='full' name='federated.1fgc14w0zhmqhj1614co81v3iwfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1fgc14w0zhmqhj1614co81v3iwfs'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Visibility MPH' datatype='real' name='[VisibilityMPH]' role='dimension' type='ordinal' />
            <column caption='Kwh/Square' datatype='real' name='[kwh/square]' role='measure' type='quantitative' />
            <column-instance column='[VisibilityMPH]' derivation='None' name='[none:VisibilityMPH:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kwh/square]' derivation='Sum' name='[sum:kwh/square:qk]' pivot='key' type='quantitative' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[排除(Vac,Visibility MPH)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:vac:nk]' />
                <groupfilter function='level-members' level='[none:VisibilityMPH:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 1&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:VisibilityMPH:ok]' member='-9999.0' />
                  <groupfilter function='member' level='[none:VisibilityMPH:ok]' member='-1778.52884512684' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[排除(Vac,Visibility MPH)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk] + [federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk])</rows>
        <cols>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk] / [federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:VisibilityMPH:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Weekday/Weekend'>
      <table>
        <view>
          <datasources>
            <datasource caption='full' name='federated.1fgc14w0zhmqhj1614co81v3iwfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1fgc14w0zhmqhj1614co81v3iwfs'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Weekday/Weekend]' role='dimension' type='ordinal' />
            <column caption='Kwh/Square' datatype='real' name='[kwh/square]' role='measure' type='quantitative' />
            <column-instance column='[Weekday/Weekend]' derivation='None' name='[none:Weekday/Weekend:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kwh/square]' derivation='Sum' name='[sum:kwh/square:qk]' pivot='key' type='quantitative' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Weekday/Weekend:ok]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' y-axis-name='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk] + [federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk])</rows>
        <cols>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk] / [federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Weekday/Weekend:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Wind SpeedMPH'>
      <table>
        <view>
          <datasources>
            <datasource caption='full' name='federated.1fgc14w0zhmqhj1614co81v3iwfs' />
          </datasources>
          <datasource-dependencies datasource='federated.1fgc14w0zhmqhj1614co81v3iwfs'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Wind SpeedMPH' datatype='real' name='[Wind_SpeedMPH]' role='dimension' type='ordinal' />
            <column caption='Kwh/Square' datatype='real' name='[kwh/square]' role='measure' type='quantitative' />
            <column-instance column='[Wind_SpeedMPH]' derivation='None' name='[none:Wind_SpeedMPH:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[kwh/square]' derivation='Sum' name='[sum:kwh/square:qk]' pivot='key' type='quantitative' />
            <column caption='Vac' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:Consumption:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names] * [federated.1fgc14w0zhmqhj1614co81v3iwfs].[Multiple Values])</rows>
        <cols>([federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk] / [federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Wind_SpeedMPH:ok])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Daily kwh'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Day:qk]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[yr:Date:ok]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[yr:Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:MonthOfYear:qk]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Base Hour Flag'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Base_Hour_Flag:ok]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Holiday'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Holiday:ok]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Weekday/Weekend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Weekday/Weekend:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temperature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:TemperatureF:ok]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Dew Point'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Dew_PointF:ok]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Humidity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Humidity:ok]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sea Level Pressure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Sea_Level_PressureIn:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Sea_Level_PressureIn:ok]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Visibility MPH'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:VisibilityMPH:ok]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Wind SpeedMPH'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[:Measure Names]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Wind_SpeedMPH:ok]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[sum:kwh/square:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Conditions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:Conditions:nk]</field>
            <field>[federated.1fgc14w0zhmqhj1614co81v3iwfs].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Base Hour Flag' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Conditions' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Daily kwh' width='192'>
      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
      3GsW6P8HvJuqpJUOzl4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dew Point' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Holiday' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2d53sc132o35nZjl1g0RsJdoJFlGxJFkUVS1ZxEjtyeWLHiZPnuf/avR98
      U+wby0oc21GiRlHNhZLYAJAgellg+87MTp/7YQEIZQtogACIPe8XUcC7Z36zOL85Zc7MkXzf
      9xEImhR5vwMQCPYTkQCCpkYkgOBAMzU1xfLCDJrlbvnd2NgYANMzMxhGDgA9t8j03DKm6zE3
      PYPboIMf2PWIBYJdJL+0wITh0z47yVTaoC0W5slnrtCiGJRtCYDrf/iUk6e6SKc9wn4ZPdhH
      KjXF5PgsR6dGyBsSXa0x2o9c4NRgckP5ogUQHGhOnjgKgTCWLdHZ2oIsVyr97NQ0R44NAXB6
      +CInho4hyxKhljZaIkHwIdnRgesHaU92MTefYqi/bUv50m7NAvm+jyRJwmtib7Uq7YWXWlyk
      p68PaTvleTaL6SK93R1bnF1rAVRVFV6Te77vo2laQ891XcrlckPPsiwsy6r6u96Vyg9QLpdx
      3a1jhDXkIH09nVXPQXSBBE3NriaAZarcuXmbvFrJbkPXyeYqo/NisYiuV35e1gqM3LpNUa9k
      d7mGpxWzjNy+jWq6a15uzSug60bl37k0o3fuoNseAPqa51EsFCgbJgD5zBKjIyMYjr/Jcynk
      ChimDUB2eZHR0TEsd7PnkM/mMW0HgHRqnpGxezjeZs8il85juZV4lhZmGbl7H8/f7Jlkl/Os
      hM3i3DSj45Mr36aPrqrkCwVc1yCfKeCsePMzk9ydmF7xPLRigXxJw7J0Crni2szH7NR9xqdm
      vvLyWQqaQbmsUSqqrITN9MQ9JmbmVjwXNbtMseygaSqaqrHaSZ4cH2NqdmHNK6VTFE2fYrGE
      rutrcd+/O8rMfKpyVM+mmFlCs9jkedwbHWFuMV0pzbHIZ5YxnM2ey9idOywsZQFwLJNcNo3t
      bvR0Nc/I7duUDLtuXSnlM4zcuY1mVb7MXZ0Fsm0Do2yyND+NmWxH1Wxk2aaYXUJ3JDpak7TE
      o5hmGcs0WJifQU/EMU0X37fIp1NYKCTjSVriEXRdx7EMZmZnSbaE8VwfxzHJLC3gBUK0xpK0
      xMNoqobrGEzPztMWDSD5YJo6y6k5fCVCe7KLaERBUzVs22Bmbp54WKl4hsrS4iy+FKW7v4+Q
      DJqqYZkGc/MLRIIykg+GXmBxcRrcFvpPRlCoeKZhML+wQFBZ8bQc8wsmkt3C0bY4rHhG2WZx
      cRFJkpB8KJfSzC3YSEaCSHdyzStbPouLC/j44HiUyyWmpg0itBHpbPvK85QVz8UzbMqOQ1FT
      aQt3EG1vrXiahi2FVzwbVzXRpQKFQo6eZDfR1via5wdZ8UycvI4WMilklxjs7SMab1nzFC+w
      4pWxMyqa6pNfnufEkQEikQhQ6QaFCLC46GG7Bm5Rwyo55DJLHBvoo6u7q+KpOp6UJSU56KYB
      5TJuySSXy3K0r4f2jnbARVPLSHKKJWwKqoHimeRLOtl8kcGeLlrbWjHKOrZpMDc7SzIRw7Y9
      XNcku7yIIwdpa6nUFV3X8OyVuhIL7G4LoChBQuEgoWCAhfkFAgGFaDQKSESjUWS5crhgMEQg
      FCIoSywsplCUVY8NXigUJhAKE8JjIZWu6YUjYeRgiIBns7CUQZZlotHYynEjKCszB+FIGCUQ
      QnZMUuncihcFSSYaDSNL67xgEN8us5wtfFWeFCAa2+gFgkE8UyeTL62VJ8kr3sr3Eo6ECQSC
      2GWVXFFDlmVisRiSFCQaC631ZVc9Qy9RUA1kJUA0EkFWgkSiwS1eWS1Q0i0CwRCRcIhAMEQo
      HPjKC4cJBAJoxRya4RAIhYmEAoTCEYLBrV4pn6FseQTCUSJBmXAkQiCgrP19V71CNo3pQCAS
      I6xAZN3fAqSKFwySyyzhuBCKtBBUNv7NQCIcCRMMhcgspfB8iXC0haC82ZMJR0IEwxGWFxdA
      kolEYyjSRi8YqtSpkOwzv7iEosjr6kpkQ52Sg2GCvs1CKr17s0ClUolEIiG8JvY8z0PXdeLx
      eF3PcRwsyyIWi9X1TLPSdQ2Hw3U9XdcJhUIEAvU7NNXOYQ8GwT7ZTLrhHTl8n/mZKbSVPlxt
      z2VifBzDrjPqX6GUz2A6jYpzGL97l7JVX/R9j5npKeyVfn0tymqe0ZERylXuXK7HtQ0mJmdo
      dP2xDY2ZuUXqWZ5jk80VMLQii8vZOse0yOaLGHqJkmbW9BzLIFcoUcpn6pZnm2XyRZXM0jzL
      2UJNzzI0CqqO51aOXwtTL1HSDJYWZkmlczW9slpALVe6zNlC7dmpTCaNqauMjY6sjTc3s+t3
      gm1T5+7dCTq6Oshmi5y9cAZLU7GSXUS/ak0x9RLj92fo7G4nm1MZHj5JJBajWCjSEulc88ql
      PPenFujqSZLLlxk+cwwJh2yuyEBP+5qn5TNMzi3T1d1Gvmhy9uQR5u6P0HnuebrXnWUpu8xM
      KkdHewsl3WWor42CajAkb7wW5NMpFjIlkokwuiXR1QJLOZ3egY1VMbu0wHKhTCKqYHoBTgwN
      0pZQCSgb55vTqTmyqk1L0MeRI7QoLrnlJXqPHiG27ntZWpilWHYJyw6EEsi2SmphkWRPH4lg
      xVlenCOn2cRDYBFisLcTTddQizae7+N3dwCQmp+hZPpEZAcvEKOvK4mua8QiUdScTqKlcmVd
      mJ2i7CoEPAM50kp3eyu6ptLelqCcz8JKeXMzE9iEwVIJxTvoaGtB10pEAxJLmQydycrVdWZq
      HF+J4ZQLxNp7ScaCaKqOllfRzACt8cqVf2riLnIojqXlSXQN0hr2UDWH9NISR04Mr30nE+Oj
      hKKt6MUs7f0niCs2JRXm7t/nxPBjALiGxujUDJ3dvaTTGc4ND6NrKq1tHXS2JQgEFFwXHL3I
      yMQ0XT19LC9ndr8FcF2H7q4ecvkMWrGE5/tk0stksvkNnmM79HR1kS3kUYslPM9mdGyccGRj
      c2eZNv1dHWRLJUrFIp5jY1oOtrPxim2aDv1d7WRVlVKxiKWX0G1vy7y0ZXv0drSRW/EUJUgk
      6JMpbvQcF7qTCfIrXigSI+gb5ErGxvP1ZTpaWyiqKqViCXwHB4WgsvGrdQnQFo9SWvE830PC
      xdnUUPhykEQshKpplIpFOjo7CUUTRNYliSdVylJVlWKphGMZzM/OYVkmpfVXOiVEIhZe8YrY
      Zpm52TnyuTzziylW2zI5GKElEljzLENjdnae++NjeHJgrfUJhGJEQzKaqlU8XWVmdgHNMLCt
      r1ruUCROSPHRNY1CScXQSszOzaNqOoXCVy1FJNaK4lvoukpBK6OrRebmF0gmkyymUmteLJ4E
      S8cwNAqagVossLC4RCKRIJ2uzCL5tkVfXxeZbJGSWsL1PXLpZdK5AmXHJxqqfIGeZTDQ30Uq
      o1IolSpjAN/3699I2Aaqqm7o++mlPItZlRPHjiDV8dRClnTR4PjRgbrlFXNp8rrD0GBfXS+f
      WUK14Eh/T10vu7yI4QUY6O2q66VT8zhyhL6Vq2Atb2lhFkJxejqTdb3FuWmUaJLujta63vzM
      JOFEF53JeE0vNT+DFGmlp2PrLf713sLsFMF4B13JrX349d7c9ATRZDcdrVv78Ou9mclxEl39
      JOMb+/C+76PrOi0tLYDP9MQ4yd4jtMYiGzzXdbFtuzJr5HtMTtynq3+IeDS0wVu9CRYKhfA9
      h4mJSfqOHCcW3thxMQyDYDCIoigYWpG5pTwnTwyx+b7w+nNYrZ9rCbCdO3P10DRt5cSF16ze
      aj1qNLjdkAB1sO1KqxIMBut6pmkSCARQFKWuV+0cAlBZQ9Eo6Ea4rrutMoR3eD3P8/B9v6Hn
      OA6KouzaLBCwrVmgaucglkIImhqRAAKW8xpvXRtlajHfWD5kiAQQ8NtP7/Hy145z9ctp7M3T
      UocckQACFEVmKafhbfPZgMOESAABP3zxHOmCzveeHyagNFeVEM8EC4iGgzx78ch+h7EvNFe6
      CwSbeIAWwGdx+j4tPceYnxiloyOJIcVx8imOnD378CIUCB4iD5AAEu1tMbJllfaOfgqZGXTF
      ws7k6D3t4XkejtNg6SWVmxHCO5ze6pKaRp7rutuqL6vLcxp5nudtaylPtdgeqAVILWWxI504
      pTQdXb0ELZdAdIigLOPKcsM7cQCKogjvkHqe5227PNd1t3XnFmjoybK8reNWcx6oBRg6c3Hl
      331bfmts+YlAcPARg2BBUyMSQNDUiAQQNDUiAQRNjUgAQVMjEkDQ1IgEEDQ1IgEETY1IAEFT
      IxJA0NQ88PMArmNyd/QebW0tWIE27NwiQ+fPP4zYBIKHzgMngO+5GKZBSJdQfR8nX8LxxGpQ
      4R361aAVpJVXhccSbYR8CSV+XKwGFR5w6FeDrhQSiDBcpcsjVoMKHkXEIFjQ1IgEqIJu2rx5
      dYT/+eMEnrcr+4cIDigiAarwzp8meO6xoyRiIe5MLe93OIKHiEiAKvQkW/hifJGJhRwdrdH9
      DkfwEBHvBarCN84NML1UJBYO0NXW+NXhgkcXkQBVkCSJY71bN50QHD6qdoGmx0f49LPrNL49
      IhA82lRNgNUdtgWCw07VBIhFK7s1iglAwWGnagKEI2HC0YiYIhIcerYMgj3PIL1cwLVsXGDz
      tmO+7zE9MUFbshVTiuKWcvQMHd2baAWCXabKLJDE2OgYHX3VX5dtmyWW0wVCQVgu61jL8ySP
      DIrVoMI7HKtBZTnMpcfPsZgpb9lnFSAQjJFIhLFsj0jAI9HTjyJWgwqPQ7QaNBqNIlFkbn6Z
      4wPdGw+mBBk+f3HLZ6wtPxEIDj5Vx7mFQp5QJMHgpsovEBw2qrYArusRDoeqdoEeZcqmza8/
      vks4qPBXz55puv2wBFupWgMiQYmbt0Y5bBtmvvf5JN984hhnjnbyx9H5/Q5HcACo2gJ09x+l
      c7a417E8dIZ62rh2Y5qy5fDNJ47tdziCA0DVBHB8hdbW2JZ7AI86F45309sRJ6jItLZE9jsc
      wQGgagJYegElFDt0SyEkSaKrLbbfYQgOEFXHAMvpNKFQ8NANggWCzVRNgI7WFm6N3d/rWASC
      Paf6cuhimf72xKGbBRIINrNlDJCbneL0U1doG78nukCCQ8+WBIjEI3z8yScgKZyu8SFdLeBL
      Cq4UxDd04h3tDzlMgeDhsCUBosleXnm5t+YHfM9leuoesWiSvBvCWpzmwvNXxGpQ4R2O1aCN
      sE0NvWzhegYoDtHWDmRZRharQZveOzSrQesRirby5NNXtvzcftCCBIIDgFgNJmhqDk0CuJ6H
      63n7HYbgEeNQvBhrOa/x60/uAvDGc2fpbBXLHfYTy3GZThU43pc88EvOD3Z02+QPo/O8ceUs
      f/nMaf40trjf4TQ1vu/zr+/cYjmv84v3bu93OA05FC3AlYtH+dWHo0jAD148t9/hNDWeX1lC
      +Y3hAe7NZvY5msbsSwLYjst/fDSGYbt899kztLaEd1ReMh7hf/3lE7sUnWAnKLLMU8P9/OL9
      21x57OC/LmdfEuDzeynOHeumr6OF97+Y4o3nzu5HGIKHxPlj3Zw/9mg8T74vCXCsr43ffTZO
      JBTgsRM9+xGCQADsUwL0JFv4m2+ex3Zd2sSTWYJ9ZN8GwbFIEAju1+EPJL7vY9kuwYCCLNde
      i7tdT9CYB98o2/eYnZ4i2d6OK0fwyiXauh+N/t5B54+jC4zP53Bcj7975SJKjTn0T27PMrNU
      xPd9fvTyBRT5UMxm7wsP3gL4PrFohFx6gbwbx1qc4UJnp1gNugvenall/v7Vi7zzp0kWsyV6
      27duz+S6Lvdms/z9qxf57WfjZAo6HYmt3UixGrR6eTteDeq5JvfuT3PsSA+yahBv7xSrQXfJ
      e+bCEf7pndvEoyEGulqRpK3dG0VR+PrZfv75ndsk4xG6ky01PbEadCO7s1N8MMblZy8D0Lfu
      52I16M4ZPtrJ8NHOht5jJ3rE7NkucSjuBB905tMl3vnTBMl4hO9cOYNc5Yot2Dnz6RKW43Ks
      t61qq1gNMXraA97/YoqfvHKRRCzE7NLhe+PeQWBiIcend+YYm8nw+b3Utj8nEmCHlE0bx62/
      DPvUQDu//vguE4t5eqoMbAU7J1ssc7I/ybmhLtIFfdufE12gHXBrYombE0uYtsuPXrqwcm9j
      K8+cH6SgGUTDQUKBR/eFk38YnWd0Os3pwQ6eOT+47W7GXvD1M/188OUMs8tFXn/61LY/J1qA
      HXB7Ks33XzjHhWPdTC8V6rptLZE9r/y+76OVLTxvd15yOTKV5qevXeLeXHZPX5vpeZXz8P3a
      R5VlideePsl3r5wlFNz+9yxagB3w3MUj/OK920RCAb7/wvB+h7OF965PklMNXNfjb166sOO7
      xolYiP/85C7R8O68NtPzfHTTpiUSrNmaeJ7PL96/TUCR6UhEefnrx3fhyF8hEmAHDHa38o/f
      fny/w6jJXLrEP7x+iV99OIpmWCRiO1t2/r3nh8mrBm3xyI67P74Pv7x6B1mWiUeCvP6N6t0W
      1bCIhAK88dxZfvb2jR0dsxqiC3SIefxULz97+wbxaIh4NPRAn/V9n5Jurj3gApW3a7cnorsy
      jWvaDr4PP3hhmFROq+m1xsJEQwF+9vYNvna6r6b357LrLYDluDiOV3NA+CijGzaBgPzIDGQf
      P9XL46dqv+SsHr/59B624+J5/kN5yi4SCtDVFuNnb9/gYoOberVahz8Xw3LWYtjVBCjqJm9e
      HSEcDHDpZA8Xjj/YIjnTcvB8n2h458nj+z7jczkCAZljvcmaXqZY5ref3iUYUPj+87X78bcn
      l7lxfwnTdvjhLlUItVxp3us9OO77PmrZIhoObsuLRYK7sjguWyzzD69f4l/euYW7C4NotWxx
      dybD+ePdBFbC2+3+/HZYzKi8/cf7SMArT5748xbDqWqJSDSK60v4jkM4WlmMNbWY5/FTvZw5
      0sHvPhvnwvFuPN/n2o0ZSrrJq0+eqFlsuqDzm0/uoigyVy4epSuuoJs2v/pwFM/zeOO5YVpb
      wriex7t/msTz/brlfX4vRbaoY1gOlu3Sn6zeBbh2Y5q/fu4sixmVL++nODfYWtUbmU7z18+d
      YWwmy9RigWPd0are7HKR965P0hIN8r3naifUp3fmmFsuUtItfvraYzW9azdnWM7r6IbFT16p
      7b33+RQF1cCwHH78rQs1vS/GU9wYTzHY3crLX6u9TdS5Y1387O0bHO9LotQZPH98a5b781lO
      D3bwjXMDVR3X8/i3D+7w1Nl+fnn1Dj9+6XxVz/d93r0+yXy6xBOnezk7WP3C5fs+b//hPks5
      jaeHBxjqrv4WkM31RwJuTi7x2lMnUGSZ63cXHnwMYFsa87MLTNy9zcjkIjd+/wcM38fzPE71
      JxmZWuJf/+cGl8/3Y9s2tydS4HtcONbJ23+4h+d52LaNbdtYloXjOGvesxcGef2pE9wYX8Dz
      PD65OcOz5/t59cnjfPDFJLZt89GNaXrbYwx2tvDBF5Nrqwoty8K27bV/p/MqQz1tDHTGyeTV
      mt6ZwST/cW2Uj25Oc6yndS2+VW/135fP9fPzd24yMpXi1EDbBm/1HCzL4sMvp/nhC2fpao1y
      by5T07s7k+a7z55isCvOYqaI53lbYrNtm4n5HN+9fJL2RIR0XsV13areTCrPdy6fJBoOkC+V
      N3jrz+eLewv87cvnyBQ0VN1c89bH5jgOT5zs5m9fPsezFwbWVlFW88ZmlvnxS+cYm8mseZtj
      s20HfJ+jPa1YtlvTK2plsgWNn3zrPJ/fXVj7m20+h3Reo2xY/ORb5/lsZHaDtz7GSv0Z4NUn
      j/P+5xN4nsczw/3812d3+c+PR3j2wuCf1wXy8ZHlAL6lEW5pW/t5MCDzo5cu4Pv+2ixBIhbm
      zlQax3VJrjz9JUnSBgfgybP9vHVtDMd1+e6Vs4DD+eNd/PbTe8gSvPS1ytW+PRFlcjGHBBzp
      /urY68uSJIkXHx/i/S+mCSgyL146SrmsV/VOD3ZwtCeJLENQkdF1fc1Z7/Z2xPnHbz++Frdl
      Vj/u8FAnb300imG5fP1MH65tVvWevzTE//3vG3QkYvR3JtA0bYsDcPnCID/77xv0tifoaovV
      9J4a7udn/32Dwe4kbS1hVNVGkqQtbm97nLeujeIhEQkF0OytsdX6d7XftcbC/PtHY1VfbLDq
      BBSZKxeP8F+/H+e1p07WPE40HMTxfH714Sh9HYmacbS2hCmVLd78cJShnrYNznr3/PEufvfp
      PSRJ4qWV1i4WCfLT1y59dU5+vbsL1fB9NE0lEo2u3GCRCAQDqKUSiUSims58uohqWJw90omq
      qlW9zZRWyjMtB5/KgGW1vMnFHL4PJ/qTD1zeXniaYREKKAQDyp4edzve6lihJRJClqVdKa+k
      WyRiIXzfR9d14vF43bJWr/qx2Naui+f5aIZFPBrCsiwAwuGtyeV6HmXDoSUapFwuEwqFqi6H
      Xl9/qp3Dg7cAkkRLvFKIso3JEEmqzJf/uYRDG0OUJDjRf7D3I2iJPNiU414iSdKO7wdsLm/1
      6v+g19JqyPL24lNkmXis8fe8uf5sOd62IxMIDiEBqGSuaZo7KsiyLAzDEF4Te77vb8tzXRfb
      tpEbTNeudoEatSyWVVkn1OjRyWqxrbUPjYJpxOpjkcJrXs/3/V31FEVZc7cT23a99QSg0o8L
      hXbWbzVNc1tlCO/weqtTvo08x3Hwfb+ht3rl3055wWCw4TPB1c5BjAEETc2uLoWwbJdfXh3B
      clxefeoEA52Np9cEgv1kV1uAkek054Y6+ZtvnueTW7O7WbRA8FDY1QQ4OdDOF+Mp3vxwRLy2
      Q/BIsKtdoHg0xE9fu4TreYSD4lkbwcFn12tpQJEP/L5QAsEqoqYKmhqRAIKmRiSAoKkRCSBo
      akQCCJoakQCCpkYkgKCp2WYC+CzNT1O2XO6NjZDL5xkdu0cxn+X+9NzDjVAgeIhs+0ZYazRA
      yXBRdR1pKU1PXxv3J9P0JqNYnif2CBPe4d4jLLWUxoxIxKNR5IDM9FSK9mQrWd2gT5YxxR5h
      Te8d4j3CJI4Nr74Etn97HxEIHgHEIFjQ1IgEEDQ1IgEETY1IAEFTIxJA0NSIBBA0NSIBBE2N
      SABBUyMSQNDUiAQQNDUiAQRNjUgAQVMjEkDQ1IgEEDQ1VRPA81wc12XnOz4JBAebqglw/eO3
      +af//RY72zRJIDj4VH0gpq1jgMcvR9i9vQQFgoNJ1RYgJEtkMjnWPz3puW5lIzLbxvd9bNvG
      3+ZzwALBQaVqC5BanufO9Xmee+kyQQB8UlMjyJ3HWZ68hxwI4PgeASWM47pcvHgO3/e3tU+s
      8IS3+vv9OO5mp2oCdPcO0dGnsn4f7NZEgpxt0RJvo1jIkexuJ1+wSERCeCsFe563rUCFdzg9
      f5v1wFt5i8h2vPX/3Wl51WKrmgDRWIxELLZhFkhzFMIhiWhrC0ePHyWXzTHYG6egWQRXtp9U
      trF1vPAOr+d53ra81denNPJWtzTdjqcoyra99VRNALVYJBINsDC/zLGBbkCip39wg9Pd3QVA
      ZyhS96ACwUFmyyC40kz4OI5E/0D3fsQk2GNsx2V0Jo1hNd+ExpYESE+MYiKhWY37hYLDwS+v
      jlBQTX7+7i3cbYwHDhNbEsB0DG6MzfGNr5+jcc9QcBgwbZcnTvcSUGRct7nu/28ZAwyeeYLX
      WruZW1yibPsMnzq2H3EJ9pCXnjjGrz4c5YnTfYSCzXXZqzoInp+dwfTCPCYqf1Mw1NvGUG/b
      foexL2zpApWLGeZSy5hNOCASNB9bEiDW1sWpI73Mzy/QXMMhQTNSdS1QMBjEF8uhBU3AlgRQ
      sylSRYvBgV7xtIzg0LO1jksS2cV5bKm5ZgMEzcmWWaB4ew/f/cEP9yMWgWDPEb0cQVMjEkDQ
      1IgEEDQ1IgEETY1IAEFTIxJA0NRse6NsAN+1+PLGLXq7u1jM5Ei0xNEMi0sXzz2s+HYd3bBR
      ZIlw6IFOXXBIebAEAEIBmVQqy+CxXubminS1RbFXHkjezitSqm1Xv1fe3Zk0vx9dwHE9vv30
      CbraYgcqvkfdW33Wt5Hnuu626svqTvGNPM/z1txG5W0u64ESQJJkorE4R0/0sbyc5uzJPjLF
      MiFZxpTlhlvVQ/Xt6vfKG51d4q8unyZbLHN/oUBfZ+uBiu9R9zzP23Z5rus29FYrdSNv9WH3
      Rl4158ESQA5w/OQpAOItLQDE4lsr0UHlhUtD/PrjuwQUme+/MLzf4QgOAE3VEU7GI/zD65d2
      rby5dJF3/zRJJBzg+88PEwyI9VOPGodiFsj3fUan04zNZtjGS8R2jY9vzvKjly9wrDfJ+Hxu
      7w4s2DUORQvw5XiKTLGM63nYtsvFEz17ctzzx7r41YcjmLbLj166sCfHFOwuhyIBSrpFX0cc
      x/Uola09O+7FEz2cHGgnqCgEAjtvTB3X4/O7ixztaaW3I74LEQoacSi6QFceO8JiViVbLPPM
      ucHGH9hFouHgrlR+gF9/PEZLNMjbf7iPuoeJ3MwcihZAkWVeefLEfoexY8qWQ19HnGg4iO00
      ntcW7JxDkQCHhb++cpZ3r08yPNRJeyJa07s1scT1u4u0JyJ859kzSJK0h1HuPY7rUdRM2hOR
      XT/XfUmAsmnz5tURHNfjLy+fpjvZsh9hHDji0RBvPHe2off5vUX+4fVL/ObTe2RLBp2ttZPl
      Ucf1fP7fu7doawkTDCh8+xundlymZlj4fuX73pcxwJfjKZ4aHuD7L5zj41uz+xHCI82J/nZ+
      8d5tSrpJMn7wNrIqaCbXbkzvyjhGNyxaIkG+8+wZlnJaXXdsJsOX46m6G2XMLhd58+oob10b
      ZTpV2J8EGB7q4pPbs7x1bZTHT/XuRwh18Tyf63cXGJ/L7sp9Bdf1+OzOHDNLxV0p78rFI7zx
      /DA/fvkiirx3f0K1bPHhl9MUtdrbJ3q+z5tXRxjoSvDLqyN1y7s1scS/vnuLmUowZLUAAAhv
      SURBVKVCTScRC5OMR/jZ2zd45nztCY7RmQwTC3nUssVnd+Zqe9MZXv76cV598gQj0+n9SYBk
      PMJPX7vE337rIsf7kvsRQl2u3pjG83xuT6WZTuV3XN5vPrtHIhbi2o1p8mp5x+VJkkQkFECW
      6/eHy6bNtRvTpAv6jo8J8G8f3OFITyu/vHqn9lV25ccdrVE8r3a2W7bLjftLfP+FYd77fKru
      cV/62nH+8duPc/ZoZ03HMB3a4mE6WqOUzdqL556/dJQPv5zi3euTvPj40P5NgwYU+cC+iNWw
      HNoTURLREKa989kY03LpSESJhAPYzt69b++ta6P0dyb4zSd3Me2dv+rS933aE5G6L0yTZYnX
      nj7B+59P8VeXT9f0FEXGdly+uJcisgtL0x8/1YPv+yxkSrzw+FBNLxIK8JNXHuPvXn2sMoW9
      4yMfQl75+nE++GKKtpYIZ4507Li87145w7vXJzk10EF3cusS7IeF43q0JyIoilz3arxd/vLy
      aT74fIq/+MapurMxg12tDHbVXySpyBI/evkC00tFfni2f8exSZLElYtHH/hzIgGqEAwovPrU
      yV0rLxIK1L0aPiy+e+UsH96Y5rmLR4mGgzsur7c9zhvP794q2mg4yHCdbs1esCcJoBs2luOS
      jIv9xPaSZDzCX19pPK3azDz0BMgUdP7zk7vEIiHOHu3gePf2uwCO6/Hbz+7huB7fuXzmwI4Z
      DiOe77Oc1+hqi+3pTNNe89DPbGa5yNfO9PHa0ye4P19/RkUtWxRUY+3/P7szx9kjnTw9PMD7
      X9SfKdiM71emMm9OLNWdeiybNv/2wR1+++m9hvtj5UpldNOu6ziux0c3Z5hYyDWc8kwX9IaD
      U8t2ufrFFHPpUl3P932WclrDJRS+75PKaThu/XN98+oIX95L8fN3b9edV/c8n8WsitfgZF3P
      I5VVG25m7bgeSzmtoWc7Lkv5xl5JtyjUmbbdUQugFbKkCmVODtWen33sRA+//niMm/eX+M6z
      Z8CvXoEWMiXe+dMEoYDC46d6GWgP098Z54+jCwQDMmeOVPqKBc3gzaujgM/3X6i9j9nqXHBe
      Nbk1ucSxrup3S9+9PskLl4ZYyJT4cjzF6b7qqzCv311garFAUTd547mzNb+4//r9OKcG2vnj
      2AItkRDRGuIHX0yhli0Ws2rdh3TeujbK0+cGeO/6ZN2n2H732TiSBEt5jb9/tXZ5//HxGOFg
      gOW8zt+9erGmpxk2P3zxHP/8Pzdx6wygf/7ebTpbo+RKZf7mpfNVHc/z+dd3b9HVGkM1bN64
      Un085Loe//LOTbqSLdiOy+tPVt+hyHZc/ul/btLT3oKExIuPVR9Ezy4X+eDzKRRF4qnhAXpb
      t46DdpQAuZJGFLBWHkoul8tIkoTneWuzBL7v8xdPH1/ZRdzDNB0Mw1jbVVyWZXzfZ2x6ma+d
      6iYZj/D7kXl6EgP0t0d5ZrgH1/UY6G5F13WufTnDK187iiT5vP+ncb55aQDTNNeeH1UUBdd1
      0coGrbEwiuShaWWcZBDDMNZiW42zIx7kk1szFDWD5y4O4jjOBm/1HMZnM7z8xFHuzuWYnM9w
      vKeFcrm84Rx838cwLWRcZHzKhkEwIqPr+obYAKZTeX7w3Gk+uDHLYrpAaw3PtGxk30HCxzBM
      ZN9G1/UN5yBJEqlciR+9eJbf/WGSXEFFwVnzVs9BlmUyBY0ff3OY//jkPiW1jGtb6Lq+4Rxk
      Web8kST/57fXOTvYgevYmKa5thn1+u9aKxu88ewJfv7BGJZlYZrm2jO6q57ng2M7PH+xn5+/
      P7rmbT6HsuWgSD4vPjbAz98bwbZtXNddi2s1toJm0BKSeenSIP/y3h0cpxvf97Fte83xPI/R
      qSWePttDJBzg87uLdD7Wv6WuSH6jNqQOywszpAoGF8+dQS2VSCQSDT9TquHZjsu/fzSGZbu8
      8fxZPNus6mWKOv9+bQyoLB4LK25Vz/N8Pro5QzCg8Mz5AVRVrer5fqUJDwcDtCeiqGr1+HIl
      g99+epd4LMx3Lp9G17WqnmW7vP/FFAOdcS4c76553MWsyn//8T49yRZef/pkTU83bD74Yooz
      Rzo4NdhR8/ubWMhx7eYMx3qTvHDpaM3yxmYyfDYyx+nBDi6fH6zpbabWcT+/t8itiSUunezl
      sRPd6LpOPL6xFfV9nz+OLjAyk+bJM/2cPdKOZVnEYrEt3ie3Zxmfy3H5whGGuitrxMLh8Bbv
      6pfTTKcKvPD4ED2tIUKh0JYH3i3b5a2PRnFdj+89P4xjGVvOYUcJsJ5aX9DD8DzPx8dHkeU9
      Pa7w6nue51VNgM04jlM1ATZjmpW+++YE2Iyu61UTYDPVzuGRvA9QWQJwuJcAC/aGwzu/JRBs
      gwBU+lSqqu6ooNUB3Hp8398wCJMkaU+91d7dQfZWz+cweL7vr01wrHdWv4tVb/UNbevf5lbN
      s+3KjKFlWXU90zSxLAtFUTZ426krgdXCttMPbMTmMqoFsZfe+i/rUffWr705qJ7neciyvGEM
      UK3CVhsD1KrYsHEMUM1TFGXLGGC7deWhdoFWD+raJqpmNPQcy0DTa9+0WPVsU0c3aj9ssepZ
      hl53aeyqZ+pa3VWfq15ZLWHVuYG0drUsFXHqzC2semqhUHcv5ornUyoUqHd7a723nfKKD+DV
      myFZrYSFQu31/KtTnRWvuA3P275XrH1z8Ku6Ukar82DOnowBLNuhVGy8rt6yXYrFxi+Yshyf
      Yj7b2LMcSqXGxzXLBqreuAtoqBqaWTuRV9HzBfRtvHBWz2Ro+HSAD2omQ+3LwqrnU8xkqX+f
      GvA98plc3YQCwHPJZvONN0v3HTLZ2gmwprk22Xxjz3Ns8nUSYBXHsigUG3u241Eq1K4r/x9+
      Zz6F3sxhpAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Humidity' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Month' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sea Level Pressure' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Temperature' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Visibility MPH' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekday/Weekend' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Wind SpeedMPH' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
